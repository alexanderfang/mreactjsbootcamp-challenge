{"version":3,"sources":["logo.svg","components/profile-card.js","pages/friend-recommendation.js","components/loading.js","services/hooks/useFetchPokemonImage.js","components/PokemonCard.js","store/pokemons/action.js","services/hooks/useFetchPokemon.js","pages/Pokemon.js","components/PokemonTyping.js","pages/PokemonDetail.js","store/pokemons/reducer.js","middlewares/logger.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["ProfileCard","Card","class","style","width","Img","src","this","props","picture","Body","Title","first_name","last_name","Subtitle","className","city","country","Button","variant","onClick","onDetail","user","Component","Loading","Spinner","animation","role","useFetchPokemonImage","apiUrl","useState","data","setData","loading","setLoading","error","setError","useEffect","fetch","then","res","json","catch","err","finally","PokemonCard","id","url","favorite","useSelector","state","pokemons","favorites","dispatch","useDispatch","find","element","isFavorite","setIsFavorite","Capitalize","str","arr","replace","trim","split","result","i","length","toUpperCase","slice","Alert","types","type","name","removeFavorite","addFavorite","handleFavorite","backgroundColor","color","undefined","icon","faHeart","inverse","to","alt","abilities","ability","useFetchPokemon","Pokemon","listItems","setListItems","isFetching","setIsFetching","nextData","setNextData","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","results","next","addEventListener","removeEventListener","prevState","console","log","Container","fluid","Grid","container","spacing","justifyContent","map","poke","item","PokemonTyping","TypeColor","charAt","count","borderBottomLeftRadius","borderTopLeftRadius","padding","fontSize","borderBottomRightRadius","borderTopRightRadius","borderRadius","PokemonDetail","useParams","Row","Table","bordered","Image","rowSpan","Accordion","defaultActiveKey","Toggle","as","Header","eventKey","Collapse","moves","move","index","sprites","front_default","front_shiny","back_default","back_shiny","is_hidden","stats","stat","base_stat","defaultValue","logger","getState","action","store","createStore","combineReducers","temp","indexOf","splice","composeWithDevTools","applyMiddleware","thunk","App","Navbar","Brand","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb9caefb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nexport default class ProfileCard extends Component {\r\n    render() {\r\n        return (\r\n            <Card class=\"mx-auto\" style={{ width: '18rem' }}>\r\n                <Card.Img class=\"p-2\" src={this.props.picture} />\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.first_name} {this.props.last_name}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{this.props.city}, {this.props.country}</Card.Subtitle>\r\n                    <Button variant=\"primary\" onClick={()=>this.props.onDetail(this.props.user)}>Follow</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport ProfileCard from \"../components/profile-card\"\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nclass FriendRecommendation extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            title: 'Friend Recommendation',\r\n            friendList: [],\r\n            friendSuggestion: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://randomuser.me/api/?results=8\")\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            this.setState({\r\n                friendSuggestion: data.results\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"ComponentDidUpdate\");\r\n    }\r\n\r\n    handleDetail(todoDetail){\r\n        console.log(todoDetail);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Container fluid>\r\n                <h1>{this.state.title}</h1>\r\n                <Row>\r\n                    {this.state.friendSuggestion.map((user, index) => {\r\n                        return <Col><ProfileCard key={index}\r\n                                    user={user}\r\n                                    first_name={user.name.first} \r\n                                    last_name={user.name.last} \r\n                                    picture={user.picture.large}\r\n                                    city={user.location.city}\r\n                                    country={user.location.country} \r\n                                    onDetail={(user)=>this.handleDetail(user)}/></Col>\r\n                    })}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FriendRecommendation","import React, { Component } from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Spinner animation=\"grow\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetchPokemonImage = (apiUrl) => {\r\n    \r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setData(data)\r\n            setLoading(true)\r\n        })\r\n        .catch(err => setError(err))\r\n        .finally(() => {\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    return {data, loading, error}\r\n}\r\n\r\nexport default useFetchPokemonImage","import React, { Component, useState } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Loading from \"./loading\";\r\nimport useFetchPokemonImage from \"../services/hooks/useFetchPokemonImage\";\r\nimport \"../styles/cardStyle.css\";\r\n// import { addToFavorite } from '../store/actions/PokemonAction'\r\nimport { addFavorite, removeFavorite } from \"../store/pokemons/action\";\r\n\r\nexport default function PokemonCard(props) {\r\n  const { data, loading, error } = useFetchPokemonImage(props.url);\r\n  const favorite = useSelector((state) => state.pokemons.favorites);\r\n  const dispatch = useDispatch();\r\n  const [isFavorite, setIsFavorite] = useState(checkFavorite(data.id));\r\n\r\n  // function handleAddToFavorite(event){\r\n  //     dispatch(addToFavorite(event.currentTarget.id));\r\n  // }\r\n  function handleFavorite(id) {\r\n    if (favorite.find((element) => element === id)) {\r\n      dispatch(removeFavorite(id));\r\n      setIsFavorite(false);\r\n    } else {\r\n      dispatch(addFavorite(id));\r\n      setIsFavorite(true);\r\n    }\r\n  }\r\n\r\n  function Capitalize(str) {\r\n    str = str.replace(\"-\", \" \");\r\n    let arr = str.replace(/\\s+/g, \" \").trim().split(\" \");\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (arr[i][0]) result += arr[i][0].toUpperCase() + arr[i].slice(1);\r\n      result += \" \";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function checkFavorite(id) {\r\n    if (favorite.find((element) => element == id)) return true;\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error != null ? (\r\n        <Alert variant=\"danger\">{error}</Alert>\r\n      ) : loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <figure className={`card card--${data.types[0].type.name}`}>\r\n          <div className=\"multi-button\">\r\n            <button\r\n              onClick={() => handleFavorite(data.id)}\r\n              id={data.id}\r\n              style={{ backgroundColor: isFavorite ? \"white\" : \"red\" }}\r\n            >\r\n              <FontAwesomeIcon\r\n                style={{ color: isFavorite ? \"red\" : undefined }}\r\n                icon={faHeart}\r\n                inverse\r\n              />\r\n            </button>\r\n          </div>\r\n          <Link to={`poke/${data.id}`}>\r\n            <div className=\"card__image-container\">\r\n              <img\r\n                // src={`https://pokeres.bastionbot.org/images/pokemon/${data.id}.png`}\r\n                src={`https://cdn.traction.one/pokedex/pokemon/${data.id}.png`}\r\n                alt={props.name}\r\n                className=\"card__image\"\r\n              />\r\n            </div>\r\n\r\n            <figcaption className=\"card__caption\">\r\n              <h1 className=\"card__name\">{Capitalize(data.name)}</h1>\r\n\r\n              <h3 className=\"card__type\">\r\n                {data.types[0].type.name}\r\n                {data.types[1] ? (\r\n                  <span>-{data.types[1].type.name}</span>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </h3>\r\n\r\n              <div className=\"card__abilities\">\r\n                <h5 className=\"card__ability\">\r\n                  <span className=\"card__label\">Ability</span>\r\n                  {Capitalize(data.abilities[0].ability.name)}\r\n                </h5>\r\n                <h5 className=\"card__ability\">\r\n                  <span className=\"card__label\">Hidden Ability</span>\r\n                  {data.abilities[1] ? (\r\n                    <span>{Capitalize(data.abilities[1].ability.name)}</span>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </h5>\r\n              </div>\r\n            </figcaption>\r\n          </Link>\r\n        </figure>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const getPokemons = () => {\r\n  return (dispatch) => {\r\n    dispatch({type: \"SET_LOADING\", data: true});\r\n    return new Promise((resolve, reject) => {\r\n      axios.get('https://pokeapi.co/api/v2/pokemon?limit=12')\r\n        .then(({ data }) => {\r\n          dispatch({\r\n            type: \"GET_POKEMONS\",\r\n            data: data.results,\r\n          });\r\n          dispatch({type: \"SET_LOADING\", data: false});\r\n        }).catch(err => {\r\n          dispatch({type: \"CATCH_ERROR\", data: err})\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function addFavorite(id) {\r\n  return {\r\n    type: \"ADD_FAVORITE\",\r\n    data: id,\r\n  }\r\n}\r\n\r\nexport function removeFavorite(id) {\r\n  return {\r\n    type: \"REMOVE_FAVORITE\",\r\n    data: id,\r\n  }\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetchPokemon = (apiUrl) => {\r\n    \r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setData(data)\r\n            setLoading(true)\r\n        })\r\n        .catch(err => setError(err))\r\n        .finally(() => {\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    return {data, loading, error}\r\n}\r\n\r\nexport default useFetchPokemon","import React, { useEffect, useState } from \"react\";\r\nimport { Alert, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid } from \"@mui/material\"\r\nimport Loading from \"../components/loading\";\r\nimport PokemonCard from \"../components/PokemonCard\";\r\nimport useFetchPokemon from \"../services/hooks/useFetchPokemon\";\r\nimport { getPokemons } from \"../store/pokemons/action\";\r\n\r\nconst Pokemon = () => {\r\n  const { data, loading, error } = useFetchPokemon(\r\n    \"https://pokeapi.co/api/v2/pokemon?limit=12\"\r\n  );\r\n\r\n  const [listItems, setListItems] = useState();\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [nextData, setNextData] = useState(null);\r\n  // const pokemons = useSelector((state) => state.pokemons.data);\r\n  // const error = useSelector((state) => state.pokemons.error);\r\n  // const loading = useSelector((state) => state.pokemons.loading);\r\n  // const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setListItems(data.results);\r\n    setNextData(data.next);\r\n  }, [data]);\r\n\r\n  // useEffect(() => {\r\n  //     dispatch(getPokemons());\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  function handleScroll() {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop !==\r\n      document.documentElement.offsetHeight\r\n    )\r\n      return;\r\n    setIsFetching(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isFetching) return;\r\n    fetchMorePokemon();\r\n  }, [isFetching]);\r\n\r\n  function fetchMorePokemon() {\r\n    fetch(nextData)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setListItems((prevState) => [...prevState, ...data.results]);\r\n        setIsFetching(false);\r\n        setNextData(data.next);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  if (!listItems) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"pokemon-homepage\">\r\n        <h1>Pokémon List</h1>\r\n        {error != null ? (\r\n          <Alert variant=\"danger\">{error}</Alert>\r\n        ) : loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            {/* <Row > */}\r\n            <Grid container spacing={2} justifyContent=\"space-around\">\r\n              {listItems.map((poke) => {\r\n                // return <Col key={poke.url}>\r\n                //     <PokemonCard\r\n                //         name={poke.name}\r\n                //         url={poke.url}\r\n                //         />\r\n                // </Col>\r\n                return (\r\n                  <Grid item key={poke.url}>\r\n                    <PokemonCard name={poke.name} url={poke.url} />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n            {/* </Row> */}\r\n          </>\r\n        )}\r\n      </Container>\r\n      {/* {isFetching && 'Fetching more list items...'} */}\r\n    </>\r\n  );\r\n};\r\nexport default Pokemon;\r\n","import React from 'react'\r\n\r\nexport default function PokemonTyping(props) {\r\n\r\n    function TypeColor(str){\r\n        switch (str) {\r\n            case \"normal\":\r\n                return \"#A8A878\"\r\n            case \"fire\":\r\n                return \"#F08030\"\r\n            case \"fighting\":\r\n                return \"#C03028\"\r\n            case \"water\":\r\n                return \"#6890F0\"\r\n            case \"flying\":\r\n                return \"#A890F0\"\r\n            case \"grass\":\r\n                return \"#78C850\"\r\n            case \"poison\":\r\n                return \"#A040A0\"\r\n            case \"electric\":\r\n                return \"#F8D030\"\r\n            case \"ground\":\r\n                return \"#E0C068\"\r\n            case \"psychic\":\r\n                return \"#F85888\"\r\n            case \"rock\":\r\n                return \"#B8A038\"\r\n            case \"ice\":\r\n                return \"#98D8D8\"\r\n            case \"bug\":\r\n                return \"#A8B820\"\r\n            case \"dragon\":\r\n                return \"#7038F8\"\r\n            case \"ghost\":\r\n                return \"#705898\"\r\n            case \"dark\":\r\n                return \"#705848\"\r\n            case \"steel\":\r\n                return \"#B8B8D0\"\r\n            case \"fairy\":\r\n                return \"#EE99AC\"\r\n            case \"???\":\r\n                return \"#68A090\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n    \r\n    function Capitalize(str){\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.count == 2 ?\r\n            <>\r\n                <span style={{backgroundColor:TypeColor(props.type[0].type.name), borderBottomLeftRadius:\"5px\", borderTopLeftRadius:\"5px\", color:\"white\", padding:\"5px\", fontSize:\".85em\" }}>\r\n                    {Capitalize(props.type[0].type.name)}\r\n                </span>\r\n                <span style={{backgroundColor:TypeColor(props.type[1].type.name), borderBottomRightRadius:\"5px\", borderTopRightRadius:\"5px\", color:\"white\", padding:\"5px\", fontSize:\".85em\" }}>\r\n                    {Capitalize(props.type[1].type.name)}\r\n                </span>\r\n            </> :\r\n            <>\r\n                <span style={{backgroundColor:TypeColor(props.type[0].type.name), borderRadius:\"5px\", color:\"white\", padding:\"5px\", fontSize:\".85em\" }}>\r\n                    {Capitalize(props.type[0].type.name)}\r\n                </span>\r\n            </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Accordion, Card, Image, Row, Table } from 'react-bootstrap'\r\nimport Loading from '../components/loading'\r\nimport PokemonTyping from '../components/PokemonTyping'\r\nimport useFetchPokemonImage from '../services/hooks/useFetchPokemonImage'\r\n\r\nexport default function PokemonDetail(props) {\r\n    const {id} = useParams()\r\n    const {data, loading, error} = useFetchPokemonImage(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n    console.log(data)\r\n\r\n    if(data.id == null){\r\n        return <Loading />\r\n    }\r\n\r\n    function Capitalize(str){\r\n        str = str.replace('-',' ')\r\n        let arr = str.replace(/\\s+/g,' ').trim().split(' ')\r\n        let result = ''\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if(arr[i][0])\r\n                result += arr[i][0].toUpperCase() + arr[i].slice(1)\r\n            result += ' '\r\n        }\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <Row className={`card--${data.types[0].type.name}`}>\r\n            <Table bordered className=\"my-2 card__caption\">\r\n            <tbody>\r\n                <tr>\r\n                    <td><Image src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} width=\"200px\"/></td>\r\n                    <td rowSpan=\"3\">\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <div>\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                    Moves\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        <Table>\r\n                                            <tbody>\r\n                                                {data.moves.map((move, index) => {\r\n                                                    return <tr key={index}>\r\n                                                        <td>{Capitalize(move.move.name)}</td>\r\n                                                    </tr>\r\n                                                })}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </div>\r\n                        </Accordion>\r\n                    </td>\r\n                    <td>\r\n                        <h2>Sprites:</h2>\r\n                        <Image src={data.sprites.front_default}></Image>\r\n                        <Image src={data.sprites.front_shiny}></Image>\r\n                        <br/>\r\n                        <Image src={data.sprites.back_default}></Image>\r\n                        <Image src={data.sprites.back_shiny}></Image>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td rowSpan=\"2\">\r\n                        <h2>{Capitalize(data.name)}</h2>\r\n                        <PokemonTyping type={data.types} count={data.types.length}/>\r\n                    </td>\r\n                    <td>\r\n                        <h2>Abilities:</h2>\r\n                        {data.abilities.map((ability, index) => {\r\n                            return <div key={index}>\r\n                                {Capitalize(ability.ability.name)}\r\n                                <span style={{ fontSize:\"10px\" }}>{ability.is_hidden ? \"(Hidden Ability)\" : \"\"}</span>\r\n                            </div>\r\n                        })}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <h2>Stats:</h2>\r\n                        {data.stats.map((stat, index) => {\r\n                            return <div key={index}>\r\n                                {Capitalize(stat.stat.name)} : {stat.base_stat}\r\n                            </div>\r\n                        })}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            </Table>\r\n        </Row>\r\n    )\r\n}\r\n","const defaultValue = {\r\n    data: [],\r\n    favorites: [],\r\n    error: null,\r\n    loading: false,\r\n  }\r\n  \r\n  export default function reducer(state = defaultValue, action) {\r\n    switch (action.type) {\r\n      case \"SET_LOADING\":\r\n        return {\r\n          ...state,\r\n          loading: action.data,\r\n        };\r\n      case \"SET_ERROR\":\r\n        return {\r\n          ...state,\r\n          error: action.data,\r\n        };\r\n      case \"GET_POKEMONS\":\r\n        return {\r\n          ...state,\r\n          data: action.data,\r\n        };\r\n      case \"ADD_FAVORITE\":\r\n        return {\r\n          ...state,\r\n          favorites: [...state.favorites, action.data],\r\n        };\r\n      case \"REMOVE_FAVORITE\":\r\n        const temp = [...state.favorites];\r\n        const index = state.favorites.indexOf(action.data);\r\n  \r\n        if(index >= 0) {\r\n          temp.splice(index, 1);\r\n        }\r\n  \r\n        return {\r\n          ...state,\r\n          favorites: [...temp],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","const logger = ({ dispatch, getState }) => next => action => {  \r\n    return next(action);\r\n}\r\n\r\nexport default logger;","import {\r\n    applyMiddleware, \r\n    combineReducers, \r\n    createStore\r\n} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport pokemons from \"./pokemons/reducer\";\r\nimport logger from '../middlewares/logger';\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    pokemons,\r\n  }), \r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\n\r\nexport default store;","import logo from './logo.svg';\nimport './App.css';\nimport FriendRecommendation from './pages/friend-recommendation';\nimport FriendRecommendationFunction from './pages/friend-recommendation-function';\nimport Pokemon from './pages/Pokemon';\nimport PokemonDetail from './pages/PokemonDetail'\nimport {Container, Navbar} from 'react-bootstrap'\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom'\nimport {Provider} from 'react-redux'\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Navbar variant=\"dark\">\n            <Container>\n              <Navbar.Brand href=\"/\">\n              Pokemon\n              </Navbar.Brand>\n              <Link to=\"/\">Home</Link> {\" \"}\n            </Container>\n          </Navbar>\n          <Switch>\n            <Route exact path=\"/\" component={Pokemon} />\n            <Route path=\"/poke/:id\" component={PokemonDetail} />\n          </Switch>\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}